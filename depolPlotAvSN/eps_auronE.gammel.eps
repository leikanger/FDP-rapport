%!PS-Adobe-2.0 EPSF-2.0
%%Title: eps_auronE.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Jun 15 14:27:02 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (eps_auronE.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (leik)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 15 14:27:02 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
0.500 UL
LTb
1475 2100 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 2100 M
[ [(Helvetica) 120.0 0.0 true true 0 (200)]
] -40.0 MRshow
0.500 UL
LTb
1475 3273 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3273 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MRshow
0.500 UL
LTb
1475 4445 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 4445 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MRshow
0.500 UL
LTb
1475 5617 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5617 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MRshow
0.500 UL
LTb
1475 6790 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 6790 M
[ [(Helvetica) 120.0 0.0 true true 0 (1000)]
] -40.0 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
8833 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7962 M
[ [(Helvetica) 120.0 0.0 true true 0 (1200)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
0 88 V
0 6946 R
0 -88 V
stroke
0.00 0.00 0.00 C 1475 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MCshow
0.500 UL
LTb
3705 928 M
0 88 V
0 6946 R
0 -88 V
stroke
0.00 0.00 0.00 C 3705 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
5936 928 M
0 88 V
0 6946 R
0 -88 V
stroke
0.00 0.00 0.00 C 5936 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (1000)]
] -40.0 MCshow
0.500 UL
LTb
8166 928 M
0 88 V
0 6946 R
0 -88 V
stroke
0.00 0.00 0.00 C 8166 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (1500)]
] -40.0 MCshow
0.500 UL
LTb
10396 928 M
0 88 V
0 6946 R
0 -88 V
stroke
0.00 0.00 0.00 C 10396 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (2000)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
0.00 0.00 0.00 C 901 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Activity variable)]
] -40.0 MCshow
grestore
LTb
0.00 0.00 0.00 C 5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (Time)]
] -40.0 MCshow
LTb
5935 8172 M
[ [(Helvetica) 120.0 0.0 true true 0 (Activity variable for auron E)]
] -40.0 MCshow
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C LCb setrgbcolor
9745 7829 M
[ [(Helvetica) 120.0 0.0 true true 0 (Activity variable)]
] -40.0 MRshow
LT0
0.00 0.00 1.00 C 1475 928 Pls
1484 1016 Pls
1502 1127 Pls
1520 1209 Pls
1537 1321 Pls
1555 1397 Pls
1573 1502 Pls
1609 1596 Pls
1627 1731 Pls
1644 1801 Pls
1662 1901 Pls
1680 1971 Pls
1698 2071 Pls
1716 2136 Pls
1734 2229 Pls
1769 2300 Pls
1787 2423 Pls
1805 2481 Pls
1823 2569 Pls
1841 2628 Pls
1859 2716 Pls
1876 2774 Pls
1894 2856 Pls
1930 2909 Pls
1948 3021 Pls
1966 3073 Pls
1983 3155 Pls
2001 3202 Pls
2019 3279 Pls
2037 3325 Pls
2055 3402 Pls
2091 3437 Pls
2108 3542 Pls
2126 3583 Pls
2144 3654 Pls
2162 3695 Pls
2180 3765 Pls
2198 3806 Pls
2215 3876 Pls
2251 3900 Pls
2269 3994 Pls
2287 4029 Pls
2305 4093 Pls
2322 4128 Pls
2340 4193 Pls
2358 4228 Pls
2376 4293 Pls
2412 4298 Pls
2430 4386 Pls
2447 4416 Pls
2465 4474 Pls
2483 4504 Pls
2501 4562 Pls
2519 4592 Pls
2537 4650 Pls
2572 4644 Pls
2590 4726 Pls
2608 4750 Pls
2626 4803 Pls
2644 4826 Pls
2661 4879 Pls
2679 4902 Pls
2697 4955 Pls
2733 4943 Pls
2751 5025 Pls
2769 5043 Pls
2786 5090 Pls
2804 5107 Pls
2822 5154 Pls
2840 5172 Pls
2858 5219 Pls
2893 5195 Pls
2911 5271 Pls
2929 5289 Pls
2947 5336 Pls
2965 5354 Pls
2983 5395 Pls
3000 5406 Pls
3018 5447 Pls
3054 5418 Pls
3072 5488 Pls
3090 5500 Pls
3108 5541 Pls
3125 5553 Pls
3143 5594 Pls
3161 5606 Pls
3179 5647 Pls
3215 5611 Pls
3232 5682 Pls
3250 5694 Pls
3268 5735 Pls
3286 5740 Pls
3304 5776 Pls
3322 5781 Pls
3339 5817 Pls
3375 5776 Pls
3393 5840 Pls
3411 5846 Pls
3429 5881 Pls
3447 5887 Pls
3464 5922 Pls
3482 5928 Pls
3500 5963 Pls
3536 5916 Pls
3554 5981 Pls
3571 5987 Pls
3589 6022 Pls
3607 6028 Pls
3625 6063 Pls
3643 6069 Pls
3661 6104 Pls
3696 6057 Pls
3714 6121 Pls
3732 6121 Pls
3750 6151 Pls
3768 6151 Pls
3786 6180 Pls
3803 6180 Pls
3821 6209 Pls
3857 6157 Pls
3875 6215 Pls
3893 6215 Pls
3910 6245 Pls
3928 6245 Pls
3946 6274 Pls
3964 6274 Pls
3982 6303 Pls
4017 6250 Pls
4035 6309 Pls
4053 6309 Pls
4071 6338 Pls
4089 6338 Pls
4107 6368 Pls
4125 6368 Pls
4142 6397 Pls
4178 6338 Pls
4196 6397 Pls
4214 6397 Pls
4232 6426 Pls
4249 6426 Pls
4267 6456 Pls
4285 6456 Pls
4303 6485 Pls
4339 6426 Pls
4356 6485 Pls
4374 6479 Pls
4392 6502 Pls
4410 6497 Pls
4428 6520 Pls
4446 6514 Pls
4464 6538 Pls
4499 6473 Pls
4517 6526 Pls
4535 6520 Pls
4553 6543 Pls
4571 6538 Pls
4588 6561 Pls
4606 6555 Pls
4624 6579 Pls
4660 6514 Pls
4678 6567 Pls
4695 6561 Pls
4713 6585 Pls
4731 6579 Pls
4749 6602 Pls
4767 6596 Pls
4785 6620 Pls
4820 6555 Pls
4838 6608 Pls
4856 6602 Pls
4874 6626 Pls
4892 6620 Pls
4910 6643 Pls
4927 6637 Pls
4945 6661 Pls
4981 6596 Pls
4999 6649 Pls
5017 6643 Pls
5034 6667 Pls
5052 6661 Pls
5070 6684 Pls
5088 6678 Pls
5106 6702 Pls
5142 6631 Pls
5159 6684 Pls
5177 6678 Pls
5195 6702 Pls
5213 6696 Pls
5231 6719 Pls
5249 6713 Pls
5266 6737 Pls
5302 6667 Pls
5320 6719 Pls
5338 6713 Pls
5356 6737 Pls
5373 6731 Pls
5391 6754 Pls
5409 6749 Pls
5427 6772 Pls
5463 6702 Pls
5481 6754 Pls
5498 6749 Pls
5516 6772 Pls
5534 6766 Pls
5552 6790 Pls
5570 6784 Pls
5588 6807 Pls
5597 928 Pls
5601 928 Pls
5623 1045 Pls
5641 1186 Pls
5659 1268 Pls
5677 1379 Pls
5695 1456 Pls
5712 1561 Pls
5730 1637 Pls
5748 1743 Pls
5784 1831 Pls
5802 1960 Pls
5820 2030 Pls
5837 2130 Pls
5855 2194 Pls
5873 2288 Pls
5891 2352 Pls
5909 2446 Pls
5944 2511 Pls
5962 2628 Pls
5980 2687 Pls
5998 2774 Pls
6016 2827 Pls
6034 2909 Pls
6051 2962 Pls
6069 3044 Pls
6105 3091 Pls
6123 3202 Pls
6141 3249 Pls
6159 3325 Pls
6176 3372 Pls
6194 3449 Pls
6212 3495 Pls
6230 3572 Pls
6266 3601 Pls
6283 3701 Pls
6301 3742 Pls
6319 3812 Pls
6337 3853 Pls
6355 3923 Pls
6373 3958 Pls
6390 4023 Pls
6426 4041 Pls
6444 4134 Pls
6462 4170 Pls
6480 4234 Pls
6498 4269 Pls
6515 4328 Pls
6533 4357 Pls
6551 4416 Pls
6587 4422 Pls
6605 4509 Pls
6622 4539 Pls
6640 4597 Pls
6658 4627 Pls
6676 4679 Pls
6694 4703 Pls
6712 4756 Pls
6747 4750 Pls
6765 4832 Pls
6783 4855 Pls
6801 4908 Pls
6819 4932 Pls
6837 4984 Pls
6854 5002 Pls
6872 5049 Pls
6908 5031 Pls
6926 5107 Pls
6944 5125 Pls
6961 5172 Pls
6979 5189 Pls
6997 5236 Pls
7015 5254 Pls
7033 5301 Pls
7068 5277 Pls
7086 5354 Pls
7104 5365 Pls
7122 5406 Pls
7140 5418 Pls
7158 5459 Pls
7176 5471 Pls
7193 5512 Pls
7229 5483 Pls
7247 5553 Pls
7265 5565 Pls
7283 5606 Pls
7300 5617 Pls
7318 5658 Pls
7336 5670 Pls
7354 5711 Pls
7390 5676 Pls
7407 5746 Pls
7425 5752 Pls
7443 5787 Pls
7461 5793 Pls
7479 5828 Pls
7497 5834 Pls
7515 5869 Pls
7550 5828 Pls
7568 5893 Pls
7586 5899 Pls
7604 5934 Pls
7622 5940 Pls
7639 5975 Pls
7657 5981 Pls
7675 6016 Pls
7711 5969 Pls
7729 6034 Pls
7746 6039 Pls
7764 6075 Pls
7782 6080 Pls
7800 6116 Pls
7818 6116 Pls
7836 6145 Pls
7871 6092 Pls
7889 6151 Pls
7907 6151 Pls
7925 6180 Pls
7943 6180 Pls
7961 6209 Pls
7978 6209 Pls
7996 6239 Pls
8032 6186 Pls
8050 6245 Pls
8068 6245 Pls
8085 6274 Pls
8103 6274 Pls
8121 6303 Pls
8139 6303 Pls
8157 6332 Pls
8193 6274 Pls
8210 6332 Pls
8228 6332 Pls
8246 6362 Pls
8264 6362 Pls
8282 6391 Pls
8300 6391 Pls
8317 6420 Pls
8353 6362 Pls
8371 6420 Pls
8389 6420 Pls
8407 6450 Pls
8424 6450 Pls
8442 6479 Pls
8460 6473 Pls
8478 6497 Pls
8514 6438 Pls
8532 6497 Pls
8549 6491 Pls
8567 6514 Pls
8585 6508 Pls
8603 6532 Pls
8621 6526 Pls
8639 6549 Pls
8674 6485 Pls
8692 6538 Pls
8710 6532 Pls
8728 6555 Pls
8746 6549 Pls
8763 6573 Pls
8781 6567 Pls
8799 6590 Pls
8835 6526 Pls
8853 6579 Pls
8871 6573 Pls
8888 6596 Pls
8906 6590 Pls
8924 6614 Pls
8942 6608 Pls
8960 6631 Pls
8995 6567 Pls
9013 6620 Pls
9031 6614 Pls
9049 6637 Pls
9067 6631 Pls
9085 6655 Pls
9102 6649 Pls
9120 6672 Pls
9156 6608 Pls
9174 6661 Pls
9192 6655 Pls
9210 6678 Pls
9227 6672 Pls
9245 6696 Pls
9263 6690 Pls
9281 6713 Pls
9317 6643 Pls
9334 6696 Pls
9352 6690 Pls
9370 6713 Pls
9388 6708 Pls
9406 6731 Pls
9424 6725 Pls
9441 6749 Pls
9477 6678 Pls
9495 6731 Pls
9513 6725 Pls
9531 6749 Pls
9549 6743 Pls
9566 6766 Pls
9584 6760 Pls
9602 6784 Pls
9638 6713 Pls
9656 6766 Pls
9673 6760 Pls
9691 6784 Pls
9709 6778 Pls
9727 6801 Pls
9736 928 Pls
9740 928 Pls
9745 1016 Pls
9763 1127 Pls
9798 1233 Pls
9816 1373 Pls
9834 1450 Pls
9852 1555 Pls
9870 1631 Pls
9888 1737 Pls
9905 1807 Pls
9923 1907 Pls
9959 1989 Pls
9977 2118 Pls
9995 2182 Pls
10012 2276 Pls
10030 2341 Pls
10048 2434 Pls
10066 2493 Pls
10084 2581 Pls
10119 2645 Pls
10137 2763 Pls
10155 2821 Pls
10173 2903 Pls
10177 2903 Pls
10028 7829 Pls
% End plot #1
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
